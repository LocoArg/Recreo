head(df.casas)
head(df.encuestas)
df.nueva <-left_join(df.encuestas,df.casas,by="ID_Casa")
row_number(df.casas)
row(df.casas)
df.casas
?left_join
View(df.encuestas)
names(df.encuestas[1])
View(df.casas)
names(df.encuestas[1])="ID_Casa"
names(df.encuestas[1])
names(df.encuestas[1])<-"ID_Casa"
names(df.encuestas[1])<-c("ID_Casa")
View(df.encuestas)
df.encuestas[,1]<-names("ID_Casa")
View(df.encuestas)
rm(ls())
rm(list=ls())
encuestas <-read.csv('encuestas.csv',header=TRUE,sep=",")
casas <-read.csv('encuestas_casas.csv',header=TRUE,sep=",")
union <-read.csv('encuestas_Acasas.csv',header=TRUE,sep=",")
fechas <-read.csv('encuestas_fechas.csv',header=TRUE,sep=",")
df.encuestas <-tbl_df(encuestas)
df.fechas <-tbl_df(fechas)
df.fechas <-tbl_df(fechas)
df.union <-tbl_df(union)
df.casas <- df.casas[,1:5]
df.casas <_tbl_df(casas)
df.casas <- df.casas[,1:5]
df.union <-df.union[,1:2]
rm(c("casa","encuestas","fechas","union"))
rm("casa","encuestas","fechas","union")
rm("casas","encuestas","fechas","union")
casas <-read.csv('encuestas_casas.csv',header=TRUE,sep=",")
df.casas <-tbl_df(casas)
rm("casas","encuestas","fechas","union")
View(df.union)
summarise(df.union)
summarise(df.fechas)
View(df.casas)
left_join(df.union,df.casas,by="ID_Casa")
left_join(df.union,df.encuestas,by="ID_Encuesta")
View(df.encuestas)
df.encuestas$ID_Encuesta <-as.numeric(df.encuestas$ID_Encuesta)
left_join(df.union,df.encuestas,by="ID_Encuesta")
df.prueba <-left_join(df.union,df.encuestas,by="ID_Encuesta")
View(df.prueba)
encuestas <-read.csv('encuestas.csv',header=TRUE,sep=",")
df.encuestas <-tbl_df(encuestas)
df.encuestas$ID_Encuesta
as.integer(df.encuestas$ID_Encuesta)
as.numeric(levels(df.encuestas$ID_Encuesta))
as.numeric(levels(df.encuestas$ID_Encuesta)(df.encuestas$ID_Encuesta))
as.numeric(levels(df.encuestas$ID_Encuesta)[df.encuestas$ID_Encuesta])
df.encuestas$ID_Encuesta <-as.numeric(levels(df.encuestas$ID_Encuesta)[df.encuestas$ID_Encuesta])
df.prueba <-left_join(df.union,df.encuestas,by="ID_Encuesta")
df.prueba
df.prueba <- left_join(df.union,df.casas,by="ID_Casa")
df.casas <- df.casas[,1:5]
df.union <-df.union[,1:2]
df.union
df.prueba <- left_join(df.union,df.encuestas,by="ID_Encuesta")
df.prueba <- left_join(df.prueba,df.casas,by="ID_Casa")
row_number(df.encuestas)
row_number(df.encuestas$IMC)
library(dplyr)
library(tidyr)
encuestas <-read.csv('encuestas.csv',header=TRUE,sep=",")
casas <-read.csv('encuestas_casas.csv',header=TRUE,sep=",")
union <-read.csv('encuestas_Acasas.csv',header=TRUE,sep=",")
fechas <-read.csv('encuestas_fechas.csv',header=TRUE,sep=",")
df.encuestas <-tbl_df(encuestas)
df.fechas <-tbl_df(fechas)
df.casas <-tbl_df(casas)
df.union <-tbl_df(union)
df.casas <- df.casas[,1:5]
df.union <-df.union[,1:2]
rm("casas","encuestas","fechas","union")
df.encuestas$ID_Encuesta <-as.numeric(levels(df.encuestas$ID_Encuesta)[df.encuestas$ID_Encuesta])
df.prueba <- left_join(df.union,df.encuestas,by="ID_Encuesta")
df.prueba <- left_join(df.prueba,df.casas,by="ID_Casa")
library(dplyr)
library(tidyr)
dplyr::filter(df.prueba,Sexo == "Mujer")
mujeres <- dplyr::filter(df.prueba,Sexo == "Mujer") %>% dplyr::select(df.prueba,lat,lon)
mujeres <- dplyr::filter(df.prueba,Sexo == "Mujer")
mujeres
mujeres <- dplyr::select(mujeres,lat,lon)
mujeres
mujeres <-dplyr::filter(df.prueba,Sexo == "Mujer") %>% dplyr::select(lat,lon)
head(mujeres)
df.prueba$Sexo
encuestas <-read.csv('encuestas.csv',header=TRUE,sep=",")
df.encuestas <-tbl_df(encuestas)
df.encuestas$Sexo
varones <-dplyr::filter(df.prueba,Sexo == "Var贸n") %>% dplyr::select(lat,lon)
View(varones)
df.encuestas$ID_Encuesta <-as.numeric(levels(df.encuestas$ID_Encuesta)[df.encuestas$ID_Encuesta])
df.prueba <- left_join(df.union,df.encuestas,by="ID_Encuesta")
df.prueba <- left_join(df.prueba,df.casas,by="ID_Casa")
varones <-dplyr::filter(df.prueba,Sexo == "Var贸n") %>% dplyr::select(lat,lon)
is.na(df.encuestas$Etnia)<-c("",0)
df.encuestas$Etnia
prueba <-df.prueba$Etnia
str(prueba)
prueba
prueba<-factor(prueba,levels = c("Criollo","Mocovi","Otro"))
prueba
table(df.encuestas$Sexo,df.encuestas$Genero)
df.encuestas$Sexo
df.encuestas$Genero
df.encuestas$Genero <-factor(df.encuestas$Genero,levels = c("Femenino","Masculino"))
df.encuestas$Genero
table(df.encuestas$Sexo,df.encuestas$Genero)
table(df.encuestas$Sexo,df.encuestas$Genero,useNA = TRUE)
table(df.encuestas$Sexo,df.encuestas$Genero,useNA = 0)
table(df.encuestas$Sexo,df.encuestas$Genero,useNA = "")
table(df.encuestas$Sexo,df.encuestas$Genero,useNA = "NO")
table(df.encuestas$Sexo,df.encuestas$Genero,useNA = "no")
df.encuestas$Sexo<-factor(df.encuestas$Sexo,levels = c("Mujer","Var贸n"))
table(df.encuestas$Sexo,df.encuestas$Genero,useNA = "no")
library(dplyr)
library(tidyr)
encuestas <-read.csv('encuestas.csv',header=TRUE,sep=",")
casas <-read.csv('encuestas_casas.csv',header=TRUE,sep=",")
union <-read.csv('encuestas_Acasas.csv',header=TRUE,sep=",")
fechas <-read.csv('encuestas_fechas.csv',header=TRUE,sep=",")
df.encuestas <-tbl_df(encuestas)
df.fechas <-tbl_df(fechas)
df.casas <-tbl_df(casas)
df.union <-tbl_df(union)
df.casas <- df.casas[,1:5]
df.union <-df.union[,1:2]
rm("casas","encuestas","fechas","union")
df.encuestas$ID_Encuesta <-as.numeric(levels(df.encuestas$ID_Encuesta)[df.encuestas$ID_Encuesta])
df.encuestas$Etnia<-factor(df.encuestas$Etnia,levels = c("Criollo","Mocovi","Otro"))
df.encuestas$Genero <-factor(df.encuestas$Genero,levels = c("Femenino","Masculino"))
df.encuestas$Sexo<-factor(df.encuestas$Sexo,levels = c("Mujer","Var贸n"))
df.prueba <- left_join(df.union,df.encuestas,by="ID_Encuesta")
df.prueba <- left_join(df.prueba,df.casas,by="ID_Casa")
library(rgdal) #Nos permite leer el shp file, tambi?n se puede usar maptools()
library(RColorBrewer) #Para la manipulaci?n de lo paleta de colores
library(classInt) #Formaci?n de las clases necesarias para asignarle los colores
library(GISTools)
library(maps)
library(dismo)
wgs84 <- '+proj=longlat +datum=WGS84'
calles <- readOGR("E8592.shp",layer = "E8592")
proj4string(calles)<-CRS("+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
calles<-spTransform(calles,wgs84)
recreo <- readOGR("R8592.shp",layer = "R8592")
proj4string(recreo)<-CRS("+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
calles<-spTransform(calles,wgs84)
plot(recreo)
plot(calles,add=TRUE)
SP <- SpatialPoints(cbind(-60.72613, -31.49046), proj4string=CRS("+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"))
centro_recreo <- recreo[recreo$Rad2010 != c(28,29,26,18),] #No funciona
centro_recreo = centro_recreo[centro_recreo$Rad2010 != 28,]
centro_recreo = centro_recreo[centro_recreo$Rad2010 != 29,]
centro_recreo = centro_recreo[centro_recreo$Rad2010 != 26,]
centro_recreo = centro_recreo[centro_recreo$Rad2010 != 16,]
centro_recreo = centro_recreo[centro_recreo$Rad2010 != 18,]
map_recreo <- spTransform(centro_recreo, CRS("+proj=longlat +datum=WGS84"))
plot(map_recreo)
plot(calles,add=TRUE)
calles <- readOGR("E8592.shp",layer = "E8592")
recreo <- readOGR("R8592.shp",layer = "R8592")
plot(recreo)
plot(calles,add=TRUE)
proj4string(calles)<-CRS("+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
calles<-spTransform(calles,wgs84)
proj4string(recreo)<-CRS("+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
calles<-spTransform(calles,wgs84)
plot(recreo)
plot(map_recreo)
plot(calles,add=TRUE)
personas <-read.csv("d:/Archivos/Drive/FCM/Recreo/final_google.csv",sep=",",dec=".")
personas<-personas[c(1,2,3,4,5,6,8,7)]
puntos<- personas[7:8]
puntos<-puntos[-167,]
puntos<-na.omit(puntos)
coordinates(puntos)<- ~lon + lat
projection(puntos)<-wgs84
points(puntos,col='red',cex=0.5,pch=15)
library(ggplot2)
library(ggmap)
recreo_1 <-get_map(location = "Recreo, Santa Fe Argentina",zoom = 16,source = "osm",maptype ="roadmap" )
recreo_2<-get_map(location="Recreo, Santa Fe Argentina", zoom=16)
ggmap(recreo_1, extent = "normal") + geom_density2d(data = personas,
aes(x = lon, y = lat), size = 0.3) + stat_density2d(data = personas,
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 0.01, geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
ggmap(recreo_2, extent = "normal") + geom_density2d(data = personas,
aes(x = lon, y = lat), size = 0.2) + stat_density2d(data = personas,
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 0.03, geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = 0.3), data = personas, alpha =.3))
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = 0.3), data = personas, alpha =.3)
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = 0.15), data = personas, alpha =.3)
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = 0.15), data = personas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),label_both = element_blank())
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = 0.15), data = personas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank())
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = 0.15), data = personas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y element_blank(), axis.text.y = element_blank())
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = 0.15), data = personas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank())
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = 0.15), data = personas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()))
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = 0.15), data = personas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = 0.05), data = personas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = 0.05), data = personas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
View(personas)
View(df.encuestas)
View(df.prueba)
rm(list = ls())
library(dplyr)
library(tidyr)
encuestas <-read.csv('encuestas.csv',header=TRUE,sep=",")
casas <-read.csv('encuestas_casas.csv',header=TRUE,sep=",")
union <-read.csv('encuestas_Acasas.csv',header=TRUE,sep=",")
fechas <-read.csv('encuestas_fechas.csv',header=TRUE,sep=",")
df.encuestas <-tbl_df(encuestas)
df.fechas <-tbl_df(fechas)
df.casas <-tbl_df(casas)
df.union <-tbl_df(union)
df.casas <- df.casas[,1:5]
df.union <-df.union[,1:2]
rm("casas","encuestas","fechas","union")
df.encuestas$ID_Encuesta <-as.numeric(levels(df.encuestas$ID_Encuesta)[df.encuestas$ID_Encuesta])
df.encuestas$Etnia<-factor(df.encuestas$Etnia,levels = c("Criollo","Mocovi","Otro"))
df.encuestas$Genero <-factor(df.encuestas$Genero,levels = c("Femenino","Masculino"))
df.encuestas$Sexo<-factor(df.encuestas$Sexo,levels = c("Mujer","Var贸n"))
df.prueba <- left_join(df.union,df.encuestas,by="ID_Encuesta")
df.prueba <- left_join(df.prueba,df.casas,by="ID_Casa")
View(df.union)
View(df.prueba)
library(ggplot2)
library(ggmap)
recreo_1 <-get_map(location = "Recreo, Santa Fe Argentina",zoom = 16,source = "osm",maptype = "watercolor" )
plot(recreo_1)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = 0.05), data = df.prueba, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = 0.001), data = df.prueba, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = .05), data = df.prueba, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
View(df.casas)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
recreo_2<-get_map(location="Recreo, Santa Fe Argentina", zoom=16)
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01",label='ID_Casa'), data = df.casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=e
q
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01",label='ID_Casa'), data = df.casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none') +
geom_text(aes(label=ID_Casa),hjust=0, vjust=0)
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none') +
geom_text(aes(label="ID_Casa"),hjust=0, vjust=0)
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
geom_text(aes(label="ID_Casa"),hjust=0, vjust=0)
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
geom_text(aes(label="ID_Casa"),data = df.prueba ,hjust=0, vjust=0)
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
geom_text(aes(label="ID_Casa"),data = df.casas ,hjust=0, vjust=0)
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
geom_text(aes(label=ID_Casa),data = df.casas ,hjust=0, vjust=0)
wgs84 <- '+proj=longlat +datum=WGS84'
library(rgdal) #Nos permite leer el shp file, tambi?n se puede usar maptools()
library(GISTools)
df.casas
df.casas[,4:5]
puntos ,- df.casas[,4:5]
puntos <- df.casas[,4:5]
coordinates(puntos)<- ~lon + lat
projection(puntos)<-wgs84
library(dismo)
library(maps)
library(rgdal) #Nos permite leer el shp file, tambi?n se puede usar maptools()
coordinates(puntos)<- ~lon + lat
projection(puntos)<-wgs84
puntos
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = puntos, alpha =.3) +
geom_text(aes(label=ID_Casa),data = df.casas ,hjust=0, vjust=0)
casas <-read.csv('encuestas_casas.csv',header=TRUE,sep=",")
df.casas <-tbl_df(casas)
puntos <- df.casas[,4:5]
coordinates(puntos)<- ~lon + lat
projection(puntos)<-wgs84
ggmap(recreo_2) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = puntos, alpha =.3) +
geom_text(aes(label=ID_Casa),data = df.casas ,hjust=0, vjust=0)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = puntos, alpha =.3) +
geom_text(aes(label=ID_Casa),data = df.casas ,hjust=0, vjust=0)
casas <-read.csv('encuestas_casas.csv',header=TRUE,sep=",")
df.casas <-tbl_df(casas)
puntos <- df.casas[,4:5]
coordinates(puntos)<- ~lon + lat
projection(puntos)<-wgs84
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = puntos, alpha =.3) +
geom_text(aes(label=ID_Casa),data = df.casas ,hjust=0, vjust=0)
df.casas[57,]
print.data.frame(df.casas[57,])
print.data.frame(df.casas[57,],digits = 10)
wgs84 <- '+proj=longlat +datum=WGS84'
#Seteamos el directorio de trabajo
calles <- readOGR("E8592.shp",layer = "E8592")
proj4string(calles)<-CRS("+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
calles<-spTransform(calles,wgs84)
recreo <- readOGR("R8592.shp",layer = "R8592")
proj4string(recreo)<-CRS("+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
calles<-spTransform(calles,wgs84)
SP <- SpatialPoints(cbind(-60.72613, -31.49046), proj4string=CRS("+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"))
centro_recreo <- recreo[recreo$Rad2010 != c(28,29,26,18),] #No funciona
centro_recreo = centro_recreo[centro_recreo$Rad2010 != 28,]
centro_recreo = centro_recreo[centro_recreo$Rad2010 != 29,]
centro_recreo = centro_recreo[centro_recreo$Rad2010 != 26,]
centro_recreo = centro_recreo[centro_recreo$Rad2010 != 16,]
centro_recreo = centro_recreo[centro_recreo$Rad2010 != 18,]
map_recreo <- spTransform(centro_recreo, CRS("+proj=longlat +datum=WGS84"))
plot(map_recreo)
plot(calles,add=TRUE)
points(puntos,col='red',cex=0.5,pch=15)
coordinates(puntos)<- ~lon + lat
personas <-read.csv("d:/Archivos/Drive/FCM/Recreo/encuentas_casas.csv",sep=",",dec=".")
personas <-read.csv("encuentas_casas.csv",sep=",",dec=".")
personas <-read.csv("encuestas_casas.csv",sep=",",dec=".")
View(personas)
puntos<- personas[4:5]
puntos<-na.omit(puntos)
coordinates(puntos)<- ~lon + lat
projection(puntos)<-wgs84
points(puntos,col='red',cex=0.5,pch=15)
recreo_1 <-get_map(location = "Recreo, Santa Fe Argentina",zoom = 14,source = "osm",maptype = "watercolor" )
plot(recreo_1)
recreo_1 <-get_map(location = "Recreo, Santa Fe Argentina",zoom = 15,source = "osm",maptype = "watercolor" )
plot(recreo_1)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = puntos, alpha =.3) +
geom_text(aes(label=ID_Casa),data = df.casas ,hjust=0, vjust=0)
puntos <- df.casas[,4:5]
coordinates(puntos)<- ~lon + lat
projection(puntos)<-wgs84
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = puntos, alpha =.3) +
geom_text(aes(label=ID_Casa),data = df.casas ,hjust=0, vjust=0)
library(ggplot2)
library(ggmap)
recreo_1 <-get_map(location = "Recreo, Santa Fe Argentina",zoom = 15,source = "osm",maptype = "watercolor" )
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = puntos, alpha =.3) +
geom_text(aes(label=ID_Casa),data = df.casas ,hjust=0, vjust=0)
rm(list = ls())
library(dplyr)
library(tidyr)
encuestas <-read.csv('encuestas.csv',header=TRUE,sep=",")
casas <-read.csv('encuestas_casas.csv',header=TRUE,sep=",",numerals)
union <-read.csv('encuestas_Acasas.csv',header=TRUE,sep=",")
fechas <-read.csv('encuestas_fechas.csv',header=TRUE,sep=",")
df.encuestas <-tbl_df(encuestas)
df.fechas <-tbl_df(fechas)
df.casas <-tbl_df(casas)
df.union <-tbl_df(union)
df.casas <- df.casas[,1:5]
df.union <-df.union[,1:2]
rm("casas","encuestas","fechas","union")
df.encuestas$ID_Encuesta <-as.numeric(levels(df.encuestas$ID_Encuesta)[df.encuestas$ID_Encuesta])
df.encuestas$Etnia<-factor(df.encuestas$Etnia,levels = c("Criollo","Mocovi","Otro"))
df.encuestas$Genero <-factor(df.encuestas$Genero,levels = c("Femenino","Masculino"))
df.encuestas$Sexo<-factor(df.encuestas$Sexo,levels = c("Mujer","Var贸n"))
df.prueba <- left_join(df.union,df.encuestas,by="ID_Encuesta")
df.prueba <- left_join(df.prueba,df.casas,by="ID_Casa")
casas <-read.csv('encuestas_casas.csv',header=TRUE,sep=",")
df.casas <-tbl_df(casas)
df.prueba <- left_join(df.union,df.encuestas,by="ID_Encuesta")
df.prueba <- left_join(df.prueba,df.casas,by="ID_Casa")
mujeres <-dplyr::filter(df.prueba,Sexo == "Mujer") %>% dplyr::select(lat,lon)
varones <-dplyr::filter(df.prueba,Sexo == "Var贸n") %>% dplyr::select(lat,lon)
View(df.encuestas)
recreo_1 <-get_map(location = "Recreo, Santa Fe Argentina",zoom = 15,source = "osm",maptype = "watercolor" )
recreo_2<-get_map(location="Recreo, Santa Fe Argentina", zoom=16)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = puntos, alpha =.3) +
geom_text(aes(label=ID_Casa),data = df.casas ,hjust=0, vjust=0)
puntos <- df.casas[,4:5]
coordinates(puntos)<- ~lon + lat
projection(puntos)<-wgs84
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = puntos, alpha =.3) +
geom_text(aes(label=ID_Casa),data = df.casas ,hjust=0, vjust=0)
View(df.casas)
library(dplyr)
library(tidyr)
encuestas <-read.csv('encuestas.csv',header=TRUE,sep=",")
casas <-read.csv('encuestas_casas.csv',header=TRUE,sep=",")
union <-read.csv('encuestas_Acasas.csv',header=TRUE,sep=",")
fechas <-read.csv('encuestas_fechas.csv',header=TRUE,sep=",")
df.encuestas <-tbl_df(encuestas)
df.fechas <-tbl_df(fechas)
df.casas <-tbl_df(casas)
df.union <-tbl_df(union)
df.casas <- df.casas[,1:5]
df.union <-df.union[,1:2]
rm("casas","encuestas","fechas","union")
df.encuestas$ID_Encuesta <-as.numeric(levels(df.encuestas$ID_Encuesta)[df.encuestas$ID_Encuesta])
df.encuestas$Etnia<-factor(df.encuestas$Etnia,levels = c("Criollo","Mocovi","Otro"))
df.encuestas$Genero <-factor(df.encuestas$Genero,levels = c("Femenino","Masculino"))
df.encuestas$Sexo<-factor(df.encuestas$Sexo,levels = c("Mujer","Var贸n"))
df.prueba <- left_join(df.union,df.encuestas,by="ID_Encuesta")
df.prueba <- left_join(df.prueba,df.casas,by="ID_Casa")
library(rgdal) #Nos permite leer el shp file, tambi?n se puede usar maptools()
library(RColorBrewer) #Para la manipulaci?n de lo paleta de colores
library(classInt) #Formaci?n de las clases necesarias para asignarle los colores
library(GISTools)
library(maps)
library(dismo)
puntos <- df.casas[,4:5]
coordinates(puntos)<- ~lon + lat
projection(puntos)<-wgs84
wgs84 <- '+proj=longlat +datum=WGS84'
puntos <- df.casas[,4:5]
coordinates(puntos)<- ~lon + lat
projection(puntos)<-wgs84
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
puntos
df.casas
View(df.casas)
lista = c(3,764,549,576,299,671,567,571)
df.casas$ID_Casa = lista
df.casas$ID_Casa == lista
df.casas[df.casas$ID_Casa !== lista]
df.casas[df.casas$ID_Casa != lista]
df.casas
head(df.casas)
filter(df.casas,ID_casa != lista)
filter(df.casas,df.casas$ID_casa != lista)
lista
df.casas
str(df.casas)
subset(df.casas, ID_Casa %in% lista)
subset(df.casas, ID_Casa != lista)
subset(df.casas, !(ID_Casa %in% lista))
casas = subset(df.casas, !(ID_Casa %in% lista))
puntos <- casas[,4:5]
coordinates(puntos)<- ~lon + lat
projection(puntos)<-'+proj=longlat +datum=WGS84'
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = df.casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = puntos, alpha =.3) +
geom_text(aes(label=ID_Casa),data = casas ,hjust=0, vjust=0)
lista = c(3,764,549,576,299,671,567,571,353)
casas = subset(df.casas, !(ID_Casa %in% lista))
puntos <- casas[,4:5]
coordinates(puntos)<- ~lon + lat
projection(puntos)<-'+proj=longlat +datum=WGS84'
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
jpeg("proba.jpeg",quality=100,height = 3072,width = 2048)
dev.off()
jpeg("proba.jpeg",quality=100,height = 3072,width = 2048)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
dev.off()
jpeg("proba.jpeg",quality=100,height = 3072,width = 2048)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.01"), data = casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
dev.off()
jpeg("proba.jpeg",quality=100,height = 3072,width = 2048)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = "0.05"), data = casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
dev.off()
jpeg("proba.jpeg",quality=100,height = 3072,width = 2048)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = 0.2), data = casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
dev.off()
jpeg("proba.jpeg",quality=100,height = 3072,width = 2048)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = 1), data = casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
dev.off()
calles <- readOGR("E8592.shp",layer = "E8592")
proj4string(calles)<-CRS("+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
calles<-spTransform(calles,wgs84)
recreo <- readOGR("R8592.shp",layer = "R8592")
proj4string(recreo)<-CRS("+proj=tmerc +lat_0=-90 +lon_0=-60 +k=1 +x_0=5500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")
calles<-spTransform(calles,wgs84)
plot(recreo)
plot(calles,add=TRUE)
calles <- readOGR("E8592.shp",layer = "E8592")
plot(calles,add=TRUE)
Puntos con erroresjpeg("FONDO.jpeg",quality=100,height = 3072,width = 2048)
plot(recreo)
plot(calles,add=TRUE)
dev.off()
jpeg("FONDO.jpeg",quality=100,height = 3072,width = 2048)
plot(recreo)
plot(calles,add=TRUE)
dev.off()
jpeg("proba.jpeg",quality=100,height = 3072,width = 2048)
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = 5), data = casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
dev.off()
ggmap(recreo_1) + geom_point(aes(x = lon, y = lat, size = 5), data = casas, alpha =.3) +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(),axis.title.y=element_blank(), axis.text.y = element_blank(), legend.position = 'none')
